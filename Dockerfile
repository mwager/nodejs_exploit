# === Build:
# docker build -t myapp .
# docker run -p 3000:8000 -d myapp
# docker build --progress=plain --no-cache -t myapp .
# === Debug:
# docker run --entrypoint=sh -ti myapp

# stage 1
FROM node:16-bullseye AS base

RUN apt-get --yes update && apt-get --yes upgrade
RUN apt-get --yes install  netcat-traditional

# Copy source code and install NPM dependencies
WORKDIR /base
COPY src ./
COPY package.json ./
RUN npm i

# debugging
# FROM gcr.io/distroless/nodejs:debug
# FROM gcr.io/distroless/nodejs-debian11:16
# FROM node:16-bullseye-slim

# stage 2 - switch to distroless
# FROM gcr.io/distroless/nodejs:16
# COPY --from=base /base /base
# WORKDIR /base

# chainguard?
# FROM cgr.dev/chainguard/node:latest
# COPY --from=base /base /base
# WORKDIR /base

EXPOSE 8000
CMD ["server.js"]
